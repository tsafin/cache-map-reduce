<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Sample.LoggingProxy">
<Description>
simple sample of a logging proxy object:
each access (via call or property access) will 
be logged to the designated global</Description>
<Super>%RegisteredObject</Super>
<TimeCreated>64110,60845.71095</TimeCreated>

<Parameter name="LoggingGlobal">
<Description>
log access log to this global</Description>
<Type>%String</Type>
<Default>^Sample.LoggingProxy</Default>
</Parameter>

<Property name="OpenedObject">
<Description>
keep openedobject for the proxy access later</Description>
<Type>%RegisteredObject</Type>
</Property>

<Method name="Log">
<Description>
generic log utility, which save new string as a next global entry</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Value:%String</FormalSpec>
<Implementation><![CDATA[
    #dim gloRef = ..#LoggingGlobal
    set @gloRef@($increment(@gloRef)) = Value
]]></Implementation>
</Method>

<Method name="LogArgs">
<Description>
more convenient log method for writing prefix (i.e. method name)
and arguments we were called in</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>prefix:%String,args...</FormalSpec>
<Implementation><![CDATA[
    #dim S as %String = $get(prefix) _ ": " _ $get(args(1))
    #dim i as %Integer
    for i=2:1:$get(args) {
        set S = S_","_args(i)
    }
    do ..Log(S)
]]></Implementation>
</Method>

<Method name="%CreateInstance">
<Description>
open instance of a different class using given %ID</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>className:%String,%ID:%String</FormalSpec>
<ReturnType>Sample.LoggingProxy</ReturnType>
<Implementation><![CDATA[
    #dim wrapper = ..%New()
    set wrapper.OpenedObject = $classmethod(className, "%OpenId", %ID)
    return wrapper
]]></Implementation>
</Method>

<Method name="%DispatchMethod">
<Description>
log arguments and then dispatch dynamically method to the proxy object</Description>
<FormalSpec>methodName:%String,args...</FormalSpec>
<Implementation><![CDATA[
    do ..LogArgs(methodName, args...)
    return $method(..OpenedObject, methodName, args...)
]]></Implementation>
</Method>

<Method name="%DispatchClassMethod">
<Description>
log arguments and then dispatch dynamically class-method to the proxy object</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>className:%String,methodName:%String,args...</FormalSpec>
<Implementation><![CDATA[
    do ..LogArgs(className_"::"_methodName, args...)
    return $classmethod(className, methodName, args...) // FIXME - FRAMESTACK
]]></Implementation>
</Method>

<Method name="%DispatchGetProperty">
<Description>
log arguments and then dispatch dynamically property access to the proxy object</Description>
<FormalSpec>Property:%String</FormalSpec>
<Implementation><![CDATA[
    #dim Value as %String = $property(..OpenedObject, Property)
    do ..LogArgs(Property, Value)
    return Value
]]></Implementation>
</Method>

<Method name="%DispatchSetProperty">
<Description>
log arguments and then dispatch dynamically property access to the proxy object</Description>
<FormalSpec>Property,Value:%String</FormalSpec>
<Implementation><![CDATA[
    do ..LogArgs(Property, Value)
    set $property(..OpenedObject, Property) = Value
]]></Implementation>
</Method>
</Class>
</Export>
